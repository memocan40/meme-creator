[{"C:\\Users\\mehme\\codes\\memesreact\\src\\index.js":"1","C:\\Users\\mehme\\codes\\memesreact\\src\\App.js":"2","C:\\Users\\mehme\\codes\\memesreact\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1610718459987,"results":"4","hashOfConfig":"5"},{"size":1487,"mtime":1611065954767,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610718459987,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jo2ejm",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mehme\\codes\\memesreact\\src\\index.js",[],"C:\\Users\\mehme\\codes\\memesreact\\src\\App.js",["15"],"import React,{useState} from \"react\";\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  let[meme,setmeme]=useState(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTU4-uiNVupvlR8nyiZSO3VbRIgLHviJ4ZHUQ&usqp=CAU\")\n  let[value,setvalue]=useState(1);\n  let[input,setinput]=useState();\n  let[uppertext,setuppertext]=useState(\" \");\n  let[bottomtext,setbottomtext]=useState(\" \");\n  let[memevalue,setmemevalue]=useState();\n\n\n  axios.get(\"https://api.imgflip.com/get_memes\").then((res)=>{setmeme(res.data.data.memes[value].url)});\n \n  axios.get(\"http://alpha-meme-maker.herokuapp.com/\").then((res)=>{console.log(res)})\n  return (\n    <div className=\"App\">\n    <div>type a meme id between 0-100</div>\n    <div><input className=\"input\" type=\"number\" placeholder=\"type a meme id between 0-100\" onChange={(event)=>{setinput(event.target.value)}}></input><input type=\"submit\" value=\"Submit\" onClick={()=>{setvalue(input)}}></input></div>\n    \n    <div><input type=\"text\" onChange={(event)=>{setmemevalue(event.target.value)}}></input></div>\n    <div><button onClick={()=>{setuppertext(memevalue)}}>UpperText</button> <button onClick={()=>{setbottomtext(memevalue)}}>BottomText</button><button onClick={()=>{setuppertext(\"\");setbottomtext(\"\");}}>Clear</button></div>\n    <div className=\"memes\"><h2 className=\"uppertext\">{uppertext}</h2> <img className=\"memepic\" src={meme}></img> <h2 className=\"bottomtext\">{bottomtext}</h2> </div>\n    \n  \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mehme\\codes\\memesreact\\src\\reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":24,"column":71,"nodeType":"18","endLine":24,"endColumn":107},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]